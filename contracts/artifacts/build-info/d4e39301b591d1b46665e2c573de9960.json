{
	"id": "d4e39301b591d1b46665e2c573de9960",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Reddit.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.2 <0.9.0;\n\n/**\n * @title WeirdReddit\n * @dev Write and view posts on WeirdReddit\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n */\ncontract WeirdReddit {\n    struct Subreddit {\n        string subredditName;\n    }\n\n    struct Post {\n        string id;\n        Subreddit subreddit;\n        string title;\n        string content;\n    }\n\n    Subreddit[] subreddits;\n    Post[] posts;\n\n    /**\n     * @dev Store value in variable\n     * @param num value to store\n     */\n    function store(uint256 num) public {\n        // number = num;\n    }\n\n    /**\n     * @dev Return value \n     * @return value of 'number'\n     */\n    function retrieve() public view returns (uint256){\n        // return number;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Reddit.sol": {
				"WeirdReddit": {
					"abi": [
						{
							"inputs": [],
							"name": "retrieve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "store",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "Write and view posts on WeirdReddit",
						"kind": "dev",
						"methods": {
							"retrieve()": {
								"details": "Return value ",
								"returns": {
									"_0": "value of 'number'"
								}
							},
							"store(uint256)": {
								"details": "Store value in variable",
								"params": {
									"num": "value to store"
								}
							}
						},
						"title": "WeirdReddit",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Reddit.sol\":202:772  contract WeirdReddit {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Reddit.sol\":202:772  contract WeirdReddit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e64cec1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6057361d\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Reddit.sol\":688:770  function retrieve() public view returns (uint256){... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reddit.sol\":540:607  function store(uint256 num) public {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/Reddit.sol\":688:770  function retrieve() public view returns (uint256){... */\n    tag_6:\n        /* \"contracts/Reddit.sol\":729:736  uint256 */\n      0x00\n        /* \"contracts/Reddit.sol\":688:770  function retrieve() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Reddit.sol\":540:607  function store(uint256 num) public {... */\n    tag_12:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_15:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_16:\n        /* \"#utility.yul\":177:201   */\n      tag_25\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_15\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_27\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_16\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_18:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_20:\n        /* \"#utility.yul\":842:866   */\n      tag_32\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_15\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_33\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_33:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_21:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_35\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_20\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_11:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_38\n      tag_18\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1118:1237   */\n    tag_37:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_39\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_21\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207cd7b578e0e43c9adf43eca93682bc74058a5640313cc187f127e363e3071d7364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061011f8061001d5f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c80632e64cec11460345780636057361d14604e575b5f80fd5b603a6066565b604051604591906083565b60405180910390f35b606460048036038101906060919060c3565b606a565b005b5f90565b50565b5f819050919050565b607d81606d565b82525050565b5f60208201905060945f8301846076565b92915050565b5f80fd5b60a581606d565b811460ae575f80fd5b50565b5f8135905060bd81609e565b92915050565b5f6020828403121560d55760d4609a565b5b5f60e08482850160b1565b9150509291505056fea26469706673582212207cd7b578e0e43c9adf43eca93682bc74058a5640313cc187f127e363e3071d7364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0x6057361D EQ PUSH1 0x4E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x45 SWAP2 SWAP1 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x60 SWAP2 SWAP1 PUSH1 0xC3 JUMP JUMPDEST PUSH1 0x6A JUMP JUMPDEST STOP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7D DUP2 PUSH1 0x6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x94 PUSH0 DUP4 ADD DUP5 PUSH1 0x76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA5 DUP2 PUSH1 0x6D JUMP JUMPDEST DUP2 EQ PUSH1 0xAE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0xBD DUP2 PUSH1 0x9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xD5 JUMPI PUSH1 0xD4 PUSH1 0x9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0xE0 DUP5 DUP3 DUP6 ADD PUSH1 0xB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xD7B578E0E43C9ADF43ECA93682BC74058A5640313CC187F127E363E307 SAR PUSH20 0x64736F6C63430008160033000000000000000000 ",
							"sourceMap": "202:570:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@retrieve_37": {
									"entryPoint": 102,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@store_30": {
									"entryPoint": 106,
									"id": 30,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1374:1",
										"nodeType": "YulBlock",
										"src": "0:1374:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "482:35:1",
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nativeSrc": "492:19:1",
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:1",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nativeSrc": "502:9:1",
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:1",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nativeSrc": "612:28:1",
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:1",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:1",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nativeSrc": "622:12:1",
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nativeSrc": "622:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nativeSrc": "735:28:1",
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:1",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:1",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nativeSrc": "745:12:1",
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nativeSrc": "745:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nativeSrc": "812:79:1",
													"nodeType": "YulBlock",
													"src": "812:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:1",
																"nodeType": "YulBlock",
																"src": "869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:1",
																					"nodeType": "YulLiteral",
																					"src": "878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:1",
																					"nodeType": "YulLiteral",
																					"src": "881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:1"
																			},
																			"nativeSrc": "871:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:1"
																		},
																		"nativeSrc": "871:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:1"
																				},
																				"nativeSrc": "842:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:1"
																		},
																		"nativeSrc": "832:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:1"
																},
																"nativeSrc": "825:43:1",
																"nodeType": "YulFunctionCall",
																"src": "825:43:1"
															},
															"nativeSrc": "822:63:1",
															"nodeType": "YulIf",
															"src": "822:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:1",
														"nodeType": "YulTypedName",
														"src": "805:5:1",
														"type": ""
													}
												],
												"src": "769:122:1"
											},
											{
												"body": {
													"nativeSrc": "949:87:1",
													"nodeType": "YulBlock",
													"src": "949:87:1",
													"statements": [
														{
															"nativeSrc": "959:29:1",
															"nodeType": "YulAssignment",
															"src": "959:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nativeSrc": "968:20:1",
																"nodeType": "YulFunctionCall",
																"src": "968:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:1"
																},
																"nativeSrc": "997:33:1",
																"nodeType": "YulFunctionCall",
																"src": "997:33:1"
															},
															"nativeSrc": "997:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:1",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:1",
														"nodeType": "YulTypedName",
														"src": "935:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:1",
														"nodeType": "YulTypedName",
														"src": "943:5:1",
														"type": ""
													}
												],
												"src": "897:139:1"
											},
											{
												"body": {
													"nativeSrc": "1108:263:1",
													"nodeType": "YulBlock",
													"src": "1108:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:1",
																"nodeType": "YulBlock",
																"src": "1154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:1"
																			},
																			"nativeSrc": "1156:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:1"
																		},
																		"nativeSrc": "1156:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:1"
																		},
																		"nativeSrc": "1125:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:1"
																},
																"nativeSrc": "1121:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:1"
															},
															"nativeSrc": "1118:119:1",
															"nodeType": "YulIf",
															"src": "1118:119:1"
														},
														{
															"nativeSrc": "1247:117:1",
															"nodeType": "YulBlock",
															"src": "1247:117:1",
															"statements": [
																{
																	"nativeSrc": "1262:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:1"
																				},
																				"nativeSrc": "1322:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:1"
																		},
																		"nativeSrc": "1301:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:1",
														"nodeType": "YulTypedName",
														"src": "1078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:1",
														"nodeType": "YulTypedName",
														"src": "1089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:1",
														"nodeType": "YulTypedName",
														"src": "1101:6:1",
														"type": ""
													}
												],
												"src": "1042:329:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106030575f3560e01c80632e64cec11460345780636057361d14604e575b5f80fd5b603a6066565b604051604591906083565b60405180910390f35b606460048036038101906060919060c3565b606a565b005b5f90565b50565b5f819050919050565b607d81606d565b82525050565b5f60208201905060945f8301846076565b92915050565b5f80fd5b60a581606d565b811460ae575f80fd5b50565b5f8135905060bd81609e565b92915050565b5f6020828403121560d55760d4609a565b5b5f60e08482850160b1565b9150509291505056fea26469706673582212207cd7b578e0e43c9adf43eca93682bc74058a5640313cc187f127e363e3071d7364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0x6057361D EQ PUSH1 0x4E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x45 SWAP2 SWAP1 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x60 SWAP2 SWAP1 PUSH1 0xC3 JUMP JUMPDEST PUSH1 0x6A JUMP JUMPDEST STOP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7D DUP2 PUSH1 0x6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x94 PUSH0 DUP4 ADD DUP5 PUSH1 0x76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA5 DUP2 PUSH1 0x6D JUMP JUMPDEST DUP2 EQ PUSH1 0xAE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0xBD DUP2 PUSH1 0x9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xD5 JUMPI PUSH1 0xD4 PUSH1 0x9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0xE0 DUP5 DUP3 DUP6 ADD PUSH1 0xB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xD7B578E0E43C9ADF43ECA93682BC74058A5640313CC187F127E363E307 SAR PUSH20 0x64736F6C63430008160033000000000000000000 ",
							"sourceMap": "202:570:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;540:67;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;688:82;729:7;688:82;:::o;540:67::-;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "57400",
								"executionCost": "103",
								"totalCost": "57503"
							},
							"external": {
								"retrieve()": "302",
								"store(uint256)": "401"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 772,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 202,
									"end": 772,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 202,
									"end": 772,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 772,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 772,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 772,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 772,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 772,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 772,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 772,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 772,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207cd7b578e0e43c9adf43eca93682bc74058a5640313cc187f127e363e3071d7364736f6c63430008160033",
									".code": [
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "2E64CEC1"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "6057361D"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 688,
											"end": 770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 688,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 688,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 688,
											"end": 770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 688,
											"end": 770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 688,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 688,
											"end": 770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 540,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 540,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 540,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 540,
											"end": 607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 540,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 540,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 540,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 540,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 688,
											"end": 770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 688,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 540,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Reddit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"retrieve()": "2e64cec1",
							"store(uint256)": "6057361d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"Write and view posts on WeirdReddit\",\"kind\":\"dev\",\"methods\":{\"retrieve()\":{\"details\":\"Return value \",\"returns\":{\"_0\":\"value of 'number'\"}},\"store(uint256)\":{\"details\":\"Store value in variable\",\"params\":{\"num\":\"value to store\"}}},\"title\":\"WeirdReddit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Reddit.sol\":\"WeirdReddit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Reddit.sol\":{\"keccak256\":\"0x77adec96ea0ec8a090552e1ce35ac24fd7574b40f2d36d24b942c7dbab80baff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d808167868bf573af86e286df5dc6c5493ffa06a2ad012cce7090aa918a7cb00\",\"dweb:/ipfs/QmS1JUyQREnT7X1RxNiiQ2ZpHkQpymSJvRTfSnEEVNmQCB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "contracts/Reddit.sol:WeirdReddit",
								"label": "subreddits",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Subreddit)5_storage)dyn_storage"
							},
							{
								"astId": 23,
								"contract": "contracts/Reddit.sol:WeirdReddit",
								"label": "posts",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(Post)15_storage)dyn_storage"
							}
						],
						"types": {
							"t_array(t_struct(Post)15_storage)dyn_storage": {
								"base": "t_struct(Post)15_storage",
								"encoding": "dynamic_array",
								"label": "struct WeirdReddit.Post[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Subreddit)5_storage)dyn_storage": {
								"base": "t_struct(Subreddit)5_storage",
								"encoding": "dynamic_array",
								"label": "struct WeirdReddit.Subreddit[]",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Post)15_storage": {
								"encoding": "inplace",
								"label": "struct WeirdReddit.Post",
								"members": [
									{
										"astId": 7,
										"contract": "contracts/Reddit.sol:WeirdReddit",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 10,
										"contract": "contracts/Reddit.sol:WeirdReddit",
										"label": "subreddit",
										"offset": 0,
										"slot": "1",
										"type": "t_struct(Subreddit)5_storage"
									},
									{
										"astId": 12,
										"contract": "contracts/Reddit.sol:WeirdReddit",
										"label": "title",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 14,
										"contract": "contracts/Reddit.sol:WeirdReddit",
										"label": "content",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Subreddit)5_storage": {
								"encoding": "inplace",
								"label": "struct WeirdReddit.Subreddit",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/Reddit.sol:WeirdReddit",
										"label": "subredditName",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Reddit.sol": {
				"ast": {
					"absolutePath": "contracts/Reddit.sol",
					"exportedSymbols": {
						"WeirdReddit": [
							38
						]
					},
					"id": 39,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "WeirdReddit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:131:0",
								"text": " @title WeirdReddit\n @dev Write and view posts on WeirdReddit\n @custom:dev-run-script ./scripts/deploy_with_ethers.ts"
							},
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "WeirdReddit",
							"nameLocation": "211:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "WeirdReddit.Subreddit",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "subredditName",
											"nameLocation": "263:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "256:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "256:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Subreddit",
									"nameLocation": "236:9:0",
									"nodeType": "StructDefinition",
									"scope": 38,
									"src": "229:54:0",
									"visibility": "public"
								},
								{
									"canonicalName": "WeirdReddit.Post",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "318:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "311:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 6,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "311:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "subreddit",
											"nameLocation": "340:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "330:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Subreddit_$5_storage_ptr",
												"typeString": "struct WeirdReddit.Subreddit"
											},
											"typeName": {
												"id": 9,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 8,
													"name": "Subreddit",
													"nameLocations": [
														"330:9:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 5,
													"src": "330:9:0"
												},
												"referencedDeclaration": 5,
												"src": "330:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Subreddit_$5_storage_ptr",
													"typeString": "struct WeirdReddit.Subreddit"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "title",
											"nameLocation": "366:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "359:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 11,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "359:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "content",
											"nameLocation": "388:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "381:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 13,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "381:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Post",
									"nameLocation": "296:4:0",
									"nodeType": "StructDefinition",
									"scope": 38,
									"src": "289:113:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "subreddits",
									"nameLocation": "420:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "408:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Subreddit_$5_storage_$dyn_storage",
										"typeString": "struct WeirdReddit.Subreddit[]"
									},
									"typeName": {
										"baseType": {
											"id": 17,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 16,
												"name": "Subreddit",
												"nameLocations": [
													"408:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5,
												"src": "408:9:0"
											},
											"referencedDeclaration": 5,
											"src": "408:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Subreddit_$5_storage_ptr",
												"typeString": "struct WeirdReddit.Subreddit"
											}
										},
										"id": 18,
										"nodeType": "ArrayTypeName",
										"src": "408:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Subreddit_$5_storage_$dyn_storage_ptr",
											"typeString": "struct WeirdReddit.Subreddit[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "posts",
									"nameLocation": "443:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "436:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Post_$15_storage_$dyn_storage",
										"typeString": "struct WeirdReddit.Post[]"
									},
									"typeName": {
										"baseType": {
											"id": 21,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 20,
												"name": "Post",
												"nameLocations": [
													"436:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 15,
												"src": "436:4:0"
											},
											"referencedDeclaration": 15,
											"src": "436:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Post_$15_storage_ptr",
												"typeString": "struct WeirdReddit.Post"
											}
										},
										"id": 22,
										"nodeType": "ArrayTypeName",
										"src": "436:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Post_$15_storage_$dyn_storage_ptr",
											"typeString": "struct WeirdReddit.Post[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "575:32:0",
										"statements": []
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "455:80:0",
										"text": " @dev Store value in variable\n @param num value to store"
									},
									"functionSelector": "6057361d",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "store",
									"nameLocation": "549:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "563:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "555:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:13:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:0"
									},
									"scope": 38,
									"src": "540:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "737:33:0",
										"statements": []
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "613:70:0",
										"text": " @dev Return value \n @return value of 'number'"
									},
									"functionSelector": "2e64cec1",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retrieve",
									"nameLocation": "697:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "729:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:9:0"
									},
									"scope": 38,
									"src": "688:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 39,
							"src": "202:570:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:735:0"
				},
				"id": 0
			}
		}
	}
}